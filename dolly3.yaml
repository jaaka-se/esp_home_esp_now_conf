esphome:
  name: dolly3
  includes:
  - Mesh32RC.h

esp32:
  board: esp32dev
  framework:
    type: arduino



# Enable logging
logger:

# Enable Home Assistant API
api:
  password: !secret ota_pwd

ota:
  password: !secret ota_pwd

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_pwd

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "dolly3 Fallback Hotspot"
    password: !secret ota_pwd



# Example configuration entry
esp32_camera:
  name: dolly3
  external_clock:
    pin: GPIO0
    frequency: 20MHz
  i2c_pins:
    sda: GPIO26
    scl: GPIO27
  data_pins: [GPIO5, GPIO18, GPIO19, GPIO21, GPIO36, GPIO39, GPIO34, GPIO35]
  vsync_pin: GPIO25
  href_pin: GPIO23
  pixel_clock_pin: GPIO22
  power_down_pin: GPIO32
  resolution: 800x600
  horizontal_mirror: False
  vertical_flip: False
  # Example configuration entry
esp32_camera_web_server:
  - port: 8080
    mode: stream
  - port: 8081
    mode: snapshot

# Pir sensor  
binary_sensor:
  - platform: gpio
    pin: GPIO12
    name: "Dolly3 PIR Sensor"
    device_class: motion
    on_press:
      - lambda: Mesh32RC::send("dolly3 pir= on");
    on_release:
      - lambda: Mesh32RC::send("dolly3 pir= off");

# Example configuration entry
sensor:
  - platform: wifi_signal
    name: "WiFi Signal Sensor"
    update_interval: 60s
    filters:
    - lambda: Mesh32RC::send("dolly3 filterd Wifi_signal= "+(String)x); return x;

# Flashlight
output:
  - platform: gpio
    pin: GPIO4
    id: gpio_4
    
light:
  - platform: binary
    output: gpio_4
    name: dolly3 light

switch:
  - platform: gpio
    pin: GPIO15
    name: "Reboot Dolly3"
    on_turn_on:
        - lambda: Mesh32RC::Reboot();


web_server:
  port: 80
  auth:
    username: camadmin
    password: !secret web_server_password

custom_component:
- lambda: |-
    Mesh32RC::begin(0);
    return {};